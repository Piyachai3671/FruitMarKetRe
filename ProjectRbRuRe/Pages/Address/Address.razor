@using ProjectRbRuRe.Data.Models
@using ProjectRbRuRe.Data.Services
@inject LoginService loginService
@inject UserService userService
@inject ProvinceService provinceService
@inject AmphoeService amphoeService
@inject TambolService tambolService
@inject NotificationService notificationservice
@page "/address"
<NavMenuLogin></NavMenuLogin>

<div class="container h-100 ">
	<div class="row d-flex justify-content-center align-items-center h-100">
		<div class="col-lg-12 col-xl-11">
			<div class="card text-black" style="border-radius: 25px;">
				<div class="card-body p-md-5">

					<EditForm Model="@UserLogin">
						<DataAnnotationsValidator />
						<div class="row just-center">
							<div class="col-md-10 col-lg-6 col-xl-5 ">
								<p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">ชื่อผู้รับ</p>
								<form class="mx-1 mx-md-4">
									<div class="d-flex flex-row align-items-center mb-4">
										<i class="fas fa-user fa-lg me-3 fa-fw"></i>
										<div class="form-outline flex-fill mb-0">
											<InputText type="text" class="form-control " @bind-Value="@UserLogin.Name" maxlength="30" />
											<ValidationMessage For="@(()=>UserLogin.Name)" />
											<label class="form-label">ชื่อ - นามสกุล</label>
										</div>
									</div>

									<div class="d-flex flex-row align-items-center mb-4">
										<i class="fa-solid fa-phone fa-lg me-3 fa-fw"></i>
										<div class="form-outline flex-fill mb-0">
											<InputText @bind-Value="@UserLogin.Tel" type="text" class="form-control" maxlength="10" />
											<ValidationMessage For="@(()=>UserLogin.Tel)" />
											<label class="form-label" for="form3Example3c">เบอร์โทร</label>
										</div>
									</div>


									<div class="d-flex flex-row align-items-center mb-4">
										<i class="fa-sharp fa-solid fa-key fa-lg me-3 fa-fw"></i>
										<div class="form-outline flex-fill mb-0">
											<InputText @bind-Value="@UserLogin.Password" type="password" class="form-control" maxlength="30" />
											<ValidationMessage For="@(()=>UserLogin.Password)" />
											<label class="form-label" for="form3Example3c">รหัสผ่าน</label>
										</div>
									</div>

								</form>
							</div>
							<div class="col-md-10 col-lg-6 col-xl-7 ">
								<p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">ที่อยู่จัดส่ง</p>
								<form class="mx-1 mx-md-4">
									<div class="row">
										<div class="col">
											<div class="d-flex flex-row align-items-center mb-4">
												<div class="form-outline flex-fill mb-0">
													<RadzenDropDown AllowClear="false" TValue="string" Class="w-100" @bind-Value="UserLogin.Province"
																	Data=@(ListProvince.Select(c => c.pname).Distinct())
																	Change=@(args => OnChangeProvince(UserLogin)) />
													<ValidationMessage For="@(()=>ModelUser.Province)" />
													<label class="form-label">จังหวัด</label>
												</div>
											</div>
											<div class="d-flex flex-row align-items-center mb-4">
												<div class="form-outline flex-fill mb-0">
													<RadzenDropDown AllowClear="false" TValue="string" Class="w-100" @bind-Value="UserLogin.District" Disabled="@(UserLogin.Province == null)"
																	Data=@(ListAmphoes.FindAll(c => c.pcode == IDPCode.pcode).Select(c=>c.aname).Distinct())
																	Change=@(args => OnchangeAmphoe(UserLogin)) />
													<ValidationMessage For="@(()=>ModelUser.District)" />
													<label class="form-label" for="form3Example3c">อำเภอ</label>
												</div>
											</div>
										</div>
										<div class="col">
											<div class="d-flex flex-row align-items-center mb-4">
												<div class="form-outline flex-fill mb-0">
													<RadzenDropDown AllowClear="false" TValue="string" Class="w-100" @bind-Value="UserLogin.SubDistrict" Disabled="@(UserLogin.District == null)"
																	Data=@(ListTambols.FindAll(c => c.acode == IDACode.acode).Select(c=>c.tname).Distinct())
																	Change="@(arg=> OnchangeTambol(UserLogin))" />
													<ValidationMessage For="@(()=>ModelUser.SubDistrict)" />
													<label class="form-label" for="form3Example3c">ตำบล</label>
												</div>
											</div>
											<div class="d-flex flex-row align-items-center mb-4">
												<div class="form-outline flex-fill mb-0">
													<InputText @bind-Value="@UserLogin.Postcode" type="text" class="form-control" maxlength="5" />
													<ValidationMessage For="@(()=>UserLogin.Postcode)" />
													<label class="form-label" for="form3Example3c">รหัสไปรษณีย์</label>
												</div>
											</div>
										</div>
									</div>

									<div class="d-flex flex-row align-items-center mb-4">
										<div class="form-outline flex-fill mb-0">
											<InputTextArea @bind-Value="@UserLogin.Address" type="text" id="form3Example3c" class="form-control" rows="5" maxlength="255" />
											<ValidationMessage For="@(()=>UserLogin.Address)" />
											<label class="form-label" for="form3Example3c">ที่อยู่</label>
										</div>
									</div>
								</form>
							</div>
						</div>
					</EditForm>
					<div class="mt-5 d-flex justify-content-center mx-4 mb-3 mb-lg-4">
						<button class="btn btn-primary btn-lg" @onclick="OnClickEditUser">บันทึก</button>
					</div>
				</div>
			</div>
		</div>
	</div>

</div>

@code {
	private List<User> ListUser = new List<User>();
	private List<province> ListProvince = new List<province>();
	private List<Amphoe> ListAmphoes = new List<Amphoe>();
	private List<tambol> ListTambols = new List<tambol>();

	private province ConvertProvince = new();

	private province ModelProvince = new();
	private Amphoe ModelAmphoe = new();
	private tambol ModelTambol = new();


	protected override async Task OnInitializedAsync()
	{
		//ListUser = await userService.GetUserAsync();
		var Users = await userService.GetUserAsync();
		foreach (var user in Users)
		{
			ListUser.Add(new User().ToUi(user));
		}

		var Provinces = await provinceService.GetProvinceAsync();
		foreach (var Province in Provinces)
		{
			ListProvince.Add(new province().ToUi(Province));
		}
		var Amphoes = await amphoeService.GetAmphoeAsync();
		foreach (var Amphoe in Amphoes)
		{
			ListAmphoes.Add(new Amphoe().ToUi(Amphoe));
		}
		var Tambols = await tambolService.GetTambolAsync();
		foreach (var Tambol in Tambols)
		{
			ListTambols.Add(new tambol().ToUi(Tambol));
		}


		UserLogin = new User().ToUi(loginService.UserToLogin); //แปลงไปใช้ของ UserToUI
		//OnChangeProvince(UserLogin);
		//OnchangeAmphoe(UserLogin);
		//OnchangeTambol(UserLogin);
	}



	private User? UserLogin = new();
	private User ModelUser = new();

	private void OnClickEditUser()
	{
		string InputName = UserLogin.Name;
		string InputTel = UserLogin.Tel;
		string InputPassword = UserLogin.Password;

		string InputPostcode = UserLogin.Postcode;
		string InputAddress = UserLogin.Address;

		if (UserLogin.Name == null ||
			UserLogin.Tel == null ||
			UserLogin.Password == null ||

			UserLogin.Province == null ||
			UserLogin.District == null ||
			UserLogin.SubDistrict == null ||
			UserLogin.Postcode == null ||
			UserLogin.Address == null)
		{
			 ShowNotificationEditFail();
			return;
		}
		if (InputName.Length < 2 || 
			InputPassword.Length < 6 || 
			InputTel.Length != 10 ||
			InputAddress.Length < 1 ||
			InputPostcode.Length < 5)
		{
			 ShowNotificationEditFail();
			return;
		}

		if (UserLogin.Name != null ||
			UserLogin.Tel != null ||
			UserLogin.Password != null ||

			UserLogin.Province != null ||
			UserLogin.District != null ||
			UserLogin.SubDistrict != null ||
			UserLogin.Postcode != null ||
			UserLogin.Address != null)
		{
			@foreach (var User in ListUser.FindAll(e => e.UserID == UserLogin.UserID))
			{
				User.Name = UserLogin.Name;
				User.Tel = UserLogin.Tel;
				User.Password = UserLogin.Password;
				User.Province = UserLogin.Province;
				User.District = UserLogin.District;
				User.SubDistrict = UserLogin.SubDistrict;
				User.Postcode = UserLogin.Postcode;
				User.Address = UserLogin.Address;
				var a = new User().ToTable(User); //นำค่ามาเก็บใน a แต่ยังไม่บันทึกข้อมูล
				userService.EditUser(a); //บันทึกข้อมูล
			}
			ShowNotificationEditSuccess();
		}

	}
	private void ShowNotificationEditSuccess()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Success,
				Summary = "แก้ไขข้อมูสำเร็จ !",
				Detail = "",
				Duration = 5000,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}
	private void ShowNotificationEditFail()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Error,
				Summary = "กรุณากรอกข้อมูลให้ถูกต้อง !",
				Detail = "",
				Duration = 5000,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}
	private province IDPCode = new();

	private void OnChangeProvince(User ID)
	{
	
			UserLogin.District = null;
			UserLogin.SubDistrict = null;
		
		var provinceSelect = ListProvince.Find(e => e.pname == ID.Province);
		IDPCode = provinceSelect;

	}
	private Amphoe IDACode = new();
	private void OnchangeAmphoe(User ID)
	{
		//UserLogin.SubDistrict = null;

		var AmphoeSelect = ListAmphoes.Find(e => e.aname == ID.District);
		IDACode = AmphoeSelect;

	}
	private tambol IDTCode = new();
	private void OnchangeTambol(User ID)
	{

		var TambolSelect = ListTambols.Find(e => e.tname == ID.SubDistrict);
		IDTCode = TambolSelect;

	}
}