@using ProjectRbRuRe.Data.Services;
@using ProjectRbRuRe.Data.Models;
@inject LoginService loginService
@inject UserService userService
@inject StoreService storeService


<div class="container-fluid  shadow  rounded " style="background-color: #9AA544; z-index:0; width:100%;">


	<div class="d-flex bd-highlight mb-3">
		<div class="me-auto p-2 bd-highlight">
			@if (UserToLogin.Permission == "c")
			{
				<div class="col">
					<a href="homelogin" class="text-decoration-none btn-login fs-1">ตลาดผลไม้</a>
				</div>
			}
			@if (UserToLogin.Permission == "s")
			{
				<div class="col">
					<a href="seller-home" class="text-decoration-none btn-login fs-1">ตลาดผลไม้</a>
				</div>
			}

		</div>
		<div class="p-2 bd-highlight me-2">
			@if (UserToLogin.Permission == "c")
			{
			<NavLink href="selstroe">
					<button  class="btn btn-cart" style=" position:relative; top:10px; left:20px;">
						<i class="fa-solid fa-cart-plus" style=""></i>
					@*<span class=" badge rounded-pill bg-danger" style="top:-20px; ">
					11

					<span class="visually-hidden">unread messages</span>
					</span>*@
				</button>
			</NavLink>
			}
			@*<button type="button" class="btn  position-relative">

			<NavLink href="selstroe"><i class="fa-solid fa-cart-plus" style="position:relative; top:20px; color:black"</i></NavLink>
			<span class="position-absolute top-50 start-100 translate-middle badge rounded-pill bg-danger">
			99+
			<span class="visually-hidden">unread messages</span>
			</span>

			</button>*@

		</div>


		@*@if (StatusLogin == true)
		{*@
		<div class="p-2 bd-highlight">
			<div class="dropdown">
				<button class="btn btn-none dropdown-toggle btn-cart" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
					@if (UserToLogin.Permission == "c")
					{
						<img class="rounded-3" style="width:30px; height:30px; me-3" src="https://cdn.pixabay.com/photo/2022/10/31/12/43/mountain-7559738_1280.jpg">
						<span class="fs-5">
							@UserToLogin.Name
						</span>
					}
					@if (UserToLogin.Permission == "s")
					{
						<img class="rounded-3" style="width:30px; height:30px;" src="https://cdn.pixabay.com/photo/2022/10/31/12/43/mountain-7559738_1280.jpg">
						<span class="fs-5">
						@ListStores.Find(e=>e.UserID == UserToLogin.UserID).SellerName
						</span>
					}

				</button>
				<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
					@if (UserToLogin.Permission == "c")
					{
						<li><a class="dropdown-item " href="address"><i class="fa-solid fa-house me-3"></i>ที่อยู่จัดส่ง</a></li>
						<hr>
						<li class="marginstart">
							<a class="dropdown-item " href="order">
								<i class="fa-solid fa-bag-shopping me-3"></i>คำสั่งซื้อ
							</a>
						</li>
						<li><a class="dropdown-item" href="report"><i class="oi fa-solid fa-file-circle-check me-3"></i>Report</a></li>
						<li @onclick="OnLogout"><a class="dropdown-item" href="#"><i class="fa-solid fa-right-from-bracket me-3"></i>ออกจากระบบ</a></li>
						<hr>
					}

					@if (UserToLogin.Permission == "s")
					{

						<li><a class="dropdown-item" href="profile-store"><i class="fa-solid fa-address-card me-3"></i>แก้ไขร้านค้า</a></li>
						<li><a class="dropdown-item" href="manage-product"><i class="fa-solid fa-bag-shopping me-3"></i>จัดการสินค้า</a></li>
						<li><a class="dropdown-item" href="seller-order"><i class="fa-solid  fa-store me-3"></i>คำสั่งซื้อร้านค้า</a></li>
						<li><a class="dropdown-item" href="report"><i class="fa-solid fa-file-lines me-3"></i>รายงาน</a></li>
						<hr>
						<li @onclick="OnLogout"><a class="dropdown-item" href="#"><i class="fa-solid fa-right-from-bracket me-3"></i>ออกจากระบบ</a></li>
					}
				</ul>

			</div>
		</div>
		@*}*@


	</div>

</div>


@code {
	private bool StatusLogin;
	private User? UserToLogin = new();
	private List<User> ListUser = new List<User>();
	private List<Store> ListStores = new List<Store>();
	protected override async Task OnInitializedAsync()
	{
		UserToLogin = new User().ToUi(loginService.UserToLogin); //แปลงไปใช้ของ UserToUI
																	//ListUser = await userService.GetUserAsync();
		var Users = await userService.GetUserAsync();
		foreach (var user in Users)
		{
			ListUser.Add(new User().ToUi(user));
		}

		var Stores = await storeService.GetStoresAsync();
		foreach (var Store in Stores)
		{
			ListStores.Add(new Store().ToUi(Store));
		}

	}

	private void OnLogout()
	{
		bool Status = loginService.LogOut();
		StatusLogin = Status;

	}
}